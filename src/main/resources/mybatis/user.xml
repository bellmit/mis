<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.syzc.mis.dao.mysql.UserDao">
    <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>-->
    <!--<cache type="org.mybatis.caches.memcached.MemcachedCache"/>-->
    <!--<cache type="org.mybatis.caches.redis.RedisCache"/>-->

    <!--center cache configure-->
    <!--<cache-ref namespace="com.syzc.mis.dao.mysql.CustomerDao"/>-->

    <resultMap id="User" type="com.syzc.mis.entity.User">
        <id column="id" property="id"/>
        <result column="real_name" property="realName"/>
    </resultMap>

    <insert id="add" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO user (added,username, password, real_name, age, phone,sex)
        VALUE
        (
        now(),
        #{entity.username},
        sha2(concat('!a1@B2c3D4e5F6g7', #{entity.password}, '#h4$I5j6K7l8M9n0'), 256),
        #{entity.realName},
        #{entity.age},
        <choose>
            <when test="entity.phone!=null and entity.phone!=''">#{entity.phone}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,#{entity.sex}
        );
    </insert>
    <delete id="remove">
        DELETE FROM user
        WHERE id = #{userId};
    </delete>
    <update id="update">
        UPDATE user
        SET username = #{entity.username}, real_name =
        <choose>
            <when test="entity.realName==''">NULL</when>
            <otherwise>#{entity.realName}</otherwise>
        </choose>
        age =#{entity.age} ,
        phone =
        <choose>
            <when test="entity.phone==''">NULL</when>
            <otherwise>#{entity.phone}</otherwise>
        </choose>
        ,sex = #{entity.sex}
        WHERE id = #{entity.id};
    </update>
    <select id="get" resultMap="User">
        SELECT
        *
        FROM user
        WHERE id = #{id};
    </select>
    <select id="count" resultType="Long">
        SELECT count(1)
        FROM user;
    </select>
    <select id="list" resultMap="User">
        SELECT
        *
        FROM user order by added DESC
        LIMIT #{offset}, #{size};
    </select>
    <select id="listAll" resultMap="User">
        SELECT
        *
        FROM user order by added DESC
    </select>
    <select id="exists" resultType="Boolean">
        SELECT count(1) > 0
        FROM user
        WHERE id = #{id};
    </select>

    <update id="updateResetPassword">
        UPDATE user
        SET password = sha2(concat('!a1@B2c3D4e5F6g7', #{password}, '#h4$I5j6K7l8M9n0'), 256)
        WHERE id = #{id};
    </update>
    <update id="updatePassword">
        UPDATE user
        SET password = sha2(concat('!a1@B2c3D4e5F6g7', #{newPassword}, '#h4$I5j6K7l8M9n0'), 256)
        WHERE username = #{username} AND password = sha2(concat('!a1@B2c3D4e5F6g7', #{oldPassword}, '#h4$I5j6K7l8M9n0'), 256);
    </update>
    <select id="existsUsername" resultType="Boolean">
        SELECT count(1) > 0
        FROM user
        WHERE username = #{username};
    </select>
    <select id="getLogin" resultMap="User">
        SELECT
        *
        FROM user
        where username = #{username}
        AND password = sha2(concat('!a1@B2c3D4e5F6g7', #{password}, '#h4$I5j6K7l8M9n0'), 256)
        limit 1;
    </select>
</mapper>